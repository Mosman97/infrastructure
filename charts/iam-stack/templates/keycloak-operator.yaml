apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloak-operator-{{ .Values.namespace.name }}
rules:
- apiGroups: ["k8s.keycloak.org"]
  resources: ["keycloaks", "keycloaks/status", "keycloaks/finalizers", "keycloakrealmimports", "keycloakrealmimports/status", "keycloakrealmimports/finalizers"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: [""]
  resources: ["services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets", "serviceaccounts"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch", "create", "delete", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloak-operator-{{ .Values.namespace.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keycloak-operator-{{ .Values.namespace.name }}
subjects:
- kind: ServiceAccount
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-operator
  template:
    metadata:
      labels:
        app: keycloak-operator
    spec:
      serviceAccountName: keycloak-operator
      containers:
      - name: keycloak-operator
        image: quay.io/keycloak/keycloak-operator:{{ .Values.keycloak.operator.version }}
        imagePullPolicy: Always
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RELATED_IMAGE_KEYCLOAK
          value: "{{ .Values.keycloak.image.registry }}/{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
        ports:
        - containerPort: 8080
          name: http
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
