apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/name: keycloak-operator
    app.kubernetes.io/version: {{ .Values.keycloak.operator.version }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloakcontroller-cluster-role-{{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/name: keycloak-operator
    app.kubernetes.io/version: {{ .Values.keycloak.operator.version }}
rules:
- apiGroups:
  - k8s.keycloak.org
  resources:
  - keycloaks
  - keycloaks/status
  - keycloaks/finalizers
  verbs:
  - get
  - list
  - watch
  - patch
  - update
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - watch
---
# ClusterRole for KeycloakRealmImport Controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keycloakrealmimportcontroller-cluster-role-{{ .Values.namespace.name }}
  labels:
    app.kubernetes.io/name: keycloak-operator
    app.kubernetes.io/version: {{ .Values.keycloak.operator.version }}
rules:
- apiGroups:
  - k8s.keycloak.org
  resources:
  - keycloakrealmimports
  - keycloakrealmimports/status
  - keycloakrealmimports/finalizers
  verbs:
  - get
  - list
  - watch
  - patch
  - update
  - create
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# ClusterRoleBindings
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloakcontroller-cluster-role-binding-{{ .Values.namespace.name }}
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: keycloakcontroller-cluster-role-{{ .Values.namespace.name }}
subjects:
- kind: ServiceAccount
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keycloakrealmimportcontroller-cluster-role-binding-{{ .Values.namespace.name }}
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: keycloakrealmimportcontroller-cluster-role-{{ .Values.namespace.name }}
subjects:
- kind: ServiceAccount
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-operator
  namespace: {{ .Values.namespace.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-operator
  template:
    metadata:
      labels:
        app: keycloak-operator
    spec:
      serviceAccountName: keycloak-operator
      containers:
      - name: keycloak-operator
        image: quay.io/keycloak/keycloak-operator:{{ .Values.keycloak.operator.version }}
        imagePullPolicy: Always
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RELATED_IMAGE_KEYCLOAK
          value: "{{ .Values.keycloak.image.registry }}/{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
        ports:
        - containerPort: 8080
          name: http
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
